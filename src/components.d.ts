/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Patient,
} from './models/patient';

export namespace Components {
  interface AppRoot {}
  interface CosmoBaseLayout {}
  interface CosmoPatientDetail {
    'patientId': string;
  }
  interface CosmoPatientForm {
    'patient': Patient;
  }
  interface CosmoPatientList {
    'patients': Patient[];
  }
  interface CosmoPatientListContainer {}
}

declare global {


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLCosmoBaseLayoutElement extends Components.CosmoBaseLayout, HTMLStencilElement {}
  var HTMLCosmoBaseLayoutElement: {
    prototype: HTMLCosmoBaseLayoutElement;
    new (): HTMLCosmoBaseLayoutElement;
  };

  interface HTMLCosmoPatientDetailElement extends Components.CosmoPatientDetail, HTMLStencilElement {}
  var HTMLCosmoPatientDetailElement: {
    prototype: HTMLCosmoPatientDetailElement;
    new (): HTMLCosmoPatientDetailElement;
  };

  interface HTMLCosmoPatientFormElement extends Components.CosmoPatientForm, HTMLStencilElement {}
  var HTMLCosmoPatientFormElement: {
    prototype: HTMLCosmoPatientFormElement;
    new (): HTMLCosmoPatientFormElement;
  };

  interface HTMLCosmoPatientListElement extends Components.CosmoPatientList, HTMLStencilElement {}
  var HTMLCosmoPatientListElement: {
    prototype: HTMLCosmoPatientListElement;
    new (): HTMLCosmoPatientListElement;
  };

  interface HTMLCosmoPatientListContainerElement extends Components.CosmoPatientListContainer, HTMLStencilElement {}
  var HTMLCosmoPatientListContainerElement: {
    prototype: HTMLCosmoPatientListContainerElement;
    new (): HTMLCosmoPatientListContainerElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'cosmo-base-layout': HTMLCosmoBaseLayoutElement;
    'cosmo-patient-detail': HTMLCosmoPatientDetailElement;
    'cosmo-patient-form': HTMLCosmoPatientFormElement;
    'cosmo-patient-list': HTMLCosmoPatientListElement;
    'cosmo-patient-list-container': HTMLCosmoPatientListContainerElement;
  }
}

declare namespace LocalJSX {
  interface AppRoot {}
  interface CosmoBaseLayout {}
  interface CosmoPatientDetail {
    'patientId'?: string;
  }
  interface CosmoPatientForm {
    'onPatientCreated'?: (event: CustomEvent<any>) => void;
    'onPatientUpdated'?: (event: CustomEvent<any>) => void;
    'patient'?: Patient;
  }
  interface CosmoPatientList {
    'onPatientSelected'?: (event: CustomEvent<any>) => void;
    'onPatientSelectedForDeletion'?: (event: CustomEvent<any>) => void;
    'onPatientSelectedForEdit'?: (event: CustomEvent<any>) => void;
    'patients'?: Patient[];
  }
  interface CosmoPatientListContainer {}

  interface IntrinsicElements {
    'app-root': AppRoot;
    'cosmo-base-layout': CosmoBaseLayout;
    'cosmo-patient-detail': CosmoPatientDetail;
    'cosmo-patient-form': CosmoPatientForm;
    'cosmo-patient-list': CosmoPatientList;
    'cosmo-patient-list-container': CosmoPatientListContainer;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'cosmo-base-layout': LocalJSX.CosmoBaseLayout & JSXBase.HTMLAttributes<HTMLCosmoBaseLayoutElement>;
      'cosmo-patient-detail': LocalJSX.CosmoPatientDetail & JSXBase.HTMLAttributes<HTMLCosmoPatientDetailElement>;
      'cosmo-patient-form': LocalJSX.CosmoPatientForm & JSXBase.HTMLAttributes<HTMLCosmoPatientFormElement>;
      'cosmo-patient-list': LocalJSX.CosmoPatientList & JSXBase.HTMLAttributes<HTMLCosmoPatientListElement>;
      'cosmo-patient-list-container': LocalJSX.CosmoPatientListContainer & JSXBase.HTMLAttributes<HTMLCosmoPatientListContainerElement>;
    }
  }
}


